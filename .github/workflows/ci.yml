name: Automação Selenium - Windows
on: [push, pull_request]

jobs:
  test-on-windows:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
    # Passo 1: Checkout do código
    - name: Checkout repository
      uses: actions/checkout@v4

    # Passo 2: Configurar Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    # Passo 3: Instalar Chrome
    - name: Install Chrome
      shell: pwsh
      run: |
        $ProgressPreference = 'SilentlyContinue'
        $chromePath = "$env:ProgramFiles\Google\Chrome\Application\chrome.exe"
        
        if (-not (Test-Path $chromePath)) {
          Write-Host "Installing Chrome..."
          $chromeUrl = "https://dl.google.com/chrome/install/latest/chrome_installer.exe"
          Invoke-WebRequest $chromeUrl -OutFile chrome_installer.exe
          Start-Process -FilePath .\chrome_installer.exe -Args "/silent /install" -Wait
          Remove-Item chrome_installer.exe
        }
        
        # Verifica a versão instalada
        $chromeVersion = (Get-Item $chromePath).VersionInfo.FileVersion
        Write-Host "Chrome version: $chromeVersion"

    # Passo 4: Instalar dependências (incluindo WebDriverManager)
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt pytest pytest-html webdriver-manager

    # Passo 5: Executar testes (o WebDriverManager cuidará do ChromeDriver)
    - name: Run tests
      run: |
        python -m pytest tests/ -v --html=report.html

    # Passo 6: Upload do relatório
    - name: Upload test report
      uses: actions/upload-artifact@v4
      with:
        name: windows-test-report
        path: report.html
        if-no-files-found: error